name: ci-build-artifact

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-artifact:
    name: Build & upload artifacts
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.vars.outputs.artifact_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/go-mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set variables
        id: vars
        run: |
          SHA=${GITHUB_SHA::8}
          ARTIFACT_NAME="external-secret-${SHA}"
          echo "BRANCH=${GITHUB_REF#refs/heads/}"
          echo "SHA=${SHA}" >> $GITHUB_OUTPUT
          echo "artifact_name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create dist dir
        run: mkdir -p dist

      - name: Build binaries (multi-arch)
        run: |
          set -euo pipefail
          APPNAME="${{ github.event.repository.name }}"
          # platforms you want â€” add/remove as needed
          PLATFORMS=(
            "linux:amd64"
            "linux:arm64"
            "darwin:amd64"
            "darwin:arm64"
          )
          for p in "${PLATFORMS[@]}"; do
            IFS=":" read -r GOOS GOARCH <<< "$p"
            OUT="${APPNAME}-${GOOS}-${GOARCH}"
            echo "Building ${OUT}..."
            GOOS=${GOOS} GOARCH=${GOARCH} go build \
              -trimpath -ldflags="-s -w -X main.version=${{ steps.vars.outputs.artifact_name }}" \
              -o "dist/${OUT}" .

            (cd dist && tar -czf "${OUT}.tar.gz" "${OUT}")
            sha256sum "dist/${OUT}.tar.gz" > "dist/${OUT}.sha256"
            rm -f "dist/${OUT}"   # remove raw binary, keep archive + checksum
          done

      - name: Write metadata
        run: |
          mkdir -p dist/metadata
          cat > dist/metadata/build.json <<EOF
          {
            "repo": "${{ github.repository }}",
            "branch": "${{ steps.vars.outputs.BRANCH }}",
            "sha": "${{ steps.vars.outputs.SHA }}",
            "go_version": "$(go version | awk '{print $3}')",
            "built_at": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          }
          EOF
          ls -lah dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.artifact_name }}
          path: dist/
          retention-days: 30